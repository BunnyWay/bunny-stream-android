name: Deploy App

on:
  push:
    branches:
      - setup-publishing
  workflow_dispatch:

jobs:
  unit_tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    if: ${{ false }}       # TMP disable job for testing
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --no-daemon --stacktrace

  publish:
    name: Publish to Maven Central
    #needs: unit_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java, OSSRH creds & import GPG key
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Debug GPG key presence & format
        shell: bash
        env:
          GPG_KEY: ${{ secrets.MAVEN_KEY }}
        run: |
          set -x  # show each command
          
          # 1) Check that the env var is non-empty and measure its length
          if [[ -z "$GPG_KEY" ]]; then
            echo "❌ GPG_KEY is empty!" >&2
            exit 1
          fi
          echo "✅ GPG_KEY length: ${#GPG_KEY}"   #  [oai_citation:0‡stackoverflow.com](https://stackoverflow.com/questions/17368067/length-of-string-in-bash?utm_source=chatgpt.com)
          
          # 2) Preview header and footer to confirm proper armor
          echo "----header----"
          echo "$GPG_KEY" | head -n1
          echo "----footer----"
          echo "$GPG_KEY" | tail -n1
          
          # 3) Verify BEGIN/END markers
          if echo "$GPG_KEY" | grep -q "BEGIN PGP PRIVATE KEY BLOCK"; then
            echo "✅ Header OK"
          else
            echo "❌ Missing BEGIN marker" >&2
          fi
          if echo "$GPG_KEY" | grep -q "END PGP PRIVATE KEY BLOCK"; then
            echo "✅ Footer OK"
          else
            echo "❌ Missing END marker" >&2
          fi
          
          # 4) Try importing and list what you have
          echo "----importing----"
          echo "$GPG_KEY" | gpg --batch --import   #  [oai_citation:1‡unix.stackexchange.com](https://unix.stackexchange.com/questions/184947/how-to-import-secret-gpg-key-copied-from-one-machine-to-another?utm_source=chatgpt.com)
          echo "----secret keys in keyring----"
          gpg --list-secret-keys --keyid-format LONG  

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Publish artifacts
        run: |
          ./gradlew publishReleasePublicationToMavenCentralRepository --no-daemon --stacktrace \
            -PossrhUsername="${{ secrets.OSSRH_USERNAME }}" \
            -PossrhPassword="${{ secrets.OSSRH_PASSWORD }}" \
            -Dsigning.key="${{ secrets.MAVEN_KEY }}" \
            -Dsigning.password="${{ secrets.MAVEN_KEY_PASSWORD }}"

  distribute:
    name: Distribute APK
    needs: unit_tests
    runs-on: ubuntu-latest
    if: ${{ false }}       # TMP disable job for testing
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3.2.0

      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug --no-daemon

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: Testers
          file: app/build/outputs/apk/debug/app-debug.apk